// backend/src/bot/handlers.js
const { getUser } = require('../db/mock');
const { logEvent } = require('../utils/logger');

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function getMenuKeyboard() {
  return {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üí∞ –ë–∞–ª–∞–Ω—Å", callback_data: 'balance' }],
        [{ text: "üé∞ –°–ª–æ—Ç—ã", callback_data: 'slots' }, { text: "üÉè –ë–ª–µ–∫–¥–∂–µ–∫", callback_data: 'blackjack' }],
        [{ text: "‚öôÔ∏è –ú–µ–Ω—é", callback_data: 'menu' }]
      ]
    }
  };
}

// /start –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
function handleStart(bot, msg) {
  const chatId = msg.chat.id;
  logEvent(`/start by ${chatId}`);
  bot.sendMessage(chatId, `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DepRocket Casino!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`, getMenuKeyboard());
}

// inline-–∫–Ω–æ–ø–∫–∏
function handleMenu(bot, query) {
  const chatId = query.message.chat.id;
  const userId = query.from.id;
  if (query.data === 'balance') {
    const user = getUser(userId);
    bot.answerCallbackQuery({ callback_query_id: query.id });
    bot.sendMessage(chatId, `–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.balance} ü™ô`);
    logEvent(`–ü–æ–∫–∞–∑–∞–Ω –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
  } else if (query.data === 'menu') {
    bot.answerCallbackQuery({ callback_query_id: query.id });
    bot.sendMessage(chatId, `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:`, getMenuKeyboard());
  }
  // —Å—é–¥–∞ –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º —Å–ª–æ—Ç—ã –∏ –±–ª–µ–∫–¥–∂–µ–∫
}

module.exports = { handleStart, handleMenu };
